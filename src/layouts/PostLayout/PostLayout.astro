---
import Layout from "../Layout.astro";
import Author from "./Author.astro";
import Rocket from "./Rocket.astro";
import Comment from "./Comment.astro";
import Star from "../../components/Star.astro";

import { createRequire } from "node:module";
const moduleRequire = createRequire(import.meta.url);
const { JSDOM } = moduleRequire("jsdom");

const { title, post } = Astro.props;

const { document } = new JSDOM(`<h1>${title}</h1>` + post.content.rendered).window;

let toc = "";
let level = 0;
let headingNumber = 0;

const content = document.body.innerHTML.replace(
  /<h([\d])>([^<]+)<\/h([\d])>/gi,
 (str, openLevel, titleText, closeLevel) => {
    if (openLevel != closeLevel) {
      return str;
    }

    if (openLevel > level) {
      toc += new Array(openLevel - level + 1).join("<ul>");
    } else if (openLevel < level) {
      toc += new Array(level - openLevel + 1).join("</ul>");
    }

    level = parseInt(openLevel);
    headingNumber++;
    toc += `<li><a href="#toc-${headingNumber}">${titleText}</a></li>`;
    return `<h${openLevel} id="toc-${headingNumber}">${titleText}</h${closeLevel}>`;
  }
);

if (level) {
  toc += new Array(level + 1).join("</ul>");
}

---

<Layout title={title}>
  <div class="flex md:flex-col">
    <section class="content w-2/3 md:w-full p-8">
      {content.replace(/<strong>([^]+)<\/strong>/gi, async (str, text) => {
    return await (<Star>{text}</Star>);
  })}
      <Author author={post._embedded.author[0]} />
      <Comment />
    </section>
    <section class="sidebar w-1/3 md:w-full p-8">
      <h2>Table Of Contents</h2>
      {toc}
      <Rocket />
    </section>
  </div>
</Layout>
